{
  "name": "AI Category Matcher Workflow",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "categorize-product",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-trigger",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "categorize-product"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://your-domain.railway.app/n8n_process",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "name",
              "value": "={{ $json.name }}"
            },
            {
              "name": "code",
              "value": "={{ $json.code }}"
            }
          ]
        },
        "options": {}
      },
      "id": "ai-category-service",
      "name": "AI Category Service",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "status-check",
              "leftValue": "={{ $json.status }}",
              "rightValue": "success",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "success-check",
      "name": "Success Check",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [680, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://your-telegram-bot-url/sendMessage",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "chat_id",
              "value": "={{ $('webhook-trigger').json.chat_id }}"
            },
            {
              "name": "text",
              "value": "‚úÖ –¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∏—Ä–æ–≤–∞–Ω!\n\nüì¶ **–¢–æ–≤–∞—Ä**: {{ $('webhook-trigger').json.name }}\nüè∑Ô∏è **–ê—Ä—Ç–∏–∫—É–ª**: {{ $('webhook-trigger').json.code }}\nüìÇ **–ö–∞—Ç–µ–≥–æ—Ä–∏—è**: {{ $('ai-category-service').json.data.–ö–∞—Ç–µ–≥–æ—Ä–∏—è }}\nüìÅ **–ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è**: {{ $('ai-category-service').json.data.–ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è }}\nüéØ **–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å**: {{ $('ai-category-service').json.data.–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π }}%"
            }
          ]
        },
        "options": {}
      },
      "id": "success-response",
      "name": "Success Response",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [900, 200]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://your-telegram-bot-url/sendMessage",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "chat_id",
              "value": "={{ $('webhook-trigger').json.chat_id }}"
            },
            {
              "name": "text",
              "value": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏ —Ç–æ–≤–∞—Ä–∞!\n\nüì¶ **–¢–æ–≤–∞—Ä**: {{ $('webhook-trigger').json.name }}\nüè∑Ô∏è **–ê—Ä—Ç–∏–∫—É–ª**: {{ $('webhook-trigger').json.code }}\n‚ö†Ô∏è **–û—à–∏–±–∫–∞**: {{ $('ai-category-service').json.message }}"
            }
          ]
        },
        "options": {}
      },
      "id": "error-response",
      "name": "Error Response",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [900, 400]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { \"status\": \"success\", \"message\": \"Product categorized successfully\", \"data\": $('ai-category-service').json.data } }}",
        "options": {}
      },
      "id": "webhook-response",
      "name": "Webhook Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1120, 300]
    }
  ],
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "AI Category Service",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Category Service": {
      "main": [
        [
          {
            "node": "Success Check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Success Check": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Success Response": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Response": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-01-01T12:00:00.000Z",
      "updatedAt": "2024-01-01T12:00:00.000Z",
      "id": "ai-category-matcher",
      "name": "AI Category Matcher"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-01-01T12:00:00.000Z",
  "versionId": "1"
} 