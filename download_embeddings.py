#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤ –∏–∑ –≤–Ω–µ—à–Ω–µ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
"""
import os
import requests
import sys
from tqdm import tqdm

def download_file(url, filename):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ñ–∞–π–ª —Å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º"""
    try:
        response = requests.get(url, stream=True)
        response.raise_for_status()
        
        total_size = int(response.headers.get('content-length', 0))
        
        with open(filename, 'wb') as file, tqdm(
            desc=filename,
            total=total_size,
            unit='iB',
            unit_scale=True,
            unit_divisor=1024,
        ) as pbar:
            for data in response.iter_content(chunk_size=1024):
                size = file.write(data)
                pbar.update(size)
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    filename = "products_with_embeddings.pkl"
    
    # URL –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ (–Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π)
    # –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Google Drive, Dropbox, –∏–ª–∏ –¥—Ä—É–≥–æ–π —Å–µ—Ä–≤–∏—Å
    download_url = os.getenv("EMBEDDINGS_DOWNLOAD_URL")
    
    if not download_url:
        print("‚ùå –ù–µ —É–∫–∞–∑–∞–Ω URL –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è EMBEDDINGS_DOWNLOAD_URL")
        return False
    
    if os.path.exists(filename):
        print(f"‚úÖ –§–∞–π–ª {filename} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        return True
    
    print(f"üì• –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤ –∏–∑ {download_url}")
    success = download_file(download_url, filename)
    
    if success:
        print(f"‚úÖ –§–∞–π–ª {filename} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω")
        print(f"üìä –†–∞–∑–º–µ—Ä: {os.path.getsize(filename) / (1024*1024):.1f} MB")
    
    return success

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1) 